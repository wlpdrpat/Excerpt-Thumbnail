name: PHPCS

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  phpcs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Ensure Composer is available on the runner
      - name: Ensure Composer
        run: |
          if ! command -v composer >/dev/null 2>&1; then
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php composer-setup.php --install-dir=/usr/local/bin --filename=composer
          fi
          composer --version

      # Install PHPCS + standards globally (avoids vendor path issues)
      - name: Install PHPCS tooling (global)
        run: |
          composer global config --no-plugins allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
          composer global require --no-interaction --prefer-dist \
            squizlabs/php_codesniffer:^3.10 \
            wp-coding-standards/wpcs:^3.0 \
            phpcompatibility/php-compatibility:^9.3 \
            phpcompatibility/phpcompatibility-wp:^2.1

      - name: Configure PHPCS installed_paths & show standards
        run: |
          GROOT="$HOME/.composer/vendor"
          "~/.composer/vendor/bin/phpcs" --config-set installed_paths "$GROOT/wp-coding-standards/wpcs,$GROOT/phpcompatibility/php-compatibility,$GROOT/phpcompatibility/phpcompatibility-wp"
          "~/.composer/vendor/bin/phpcs" -i
          "~/.composer/vendor/bin/phpcs" --config-show

      # Build a target list of only dirs that actually exist (avoids exit 3)
      - name: Discover targets
        id: targets
        shell: bash
        run: |
          TARGETS=""
          for d in admin includes public src lib; do
            [ -d "$d" ] && TARGETS="$TARGETS $d"
          done
          if [ -z "$TARGETS" ]; then TARGETS="." ; fi
          echo "targets=$TARGETS" >> "$GITHUB_OUTPUT"
          echo "Lint targets: $TARGETS"

      # Use repo ruleset if present; fallback to PSR12 so we always run
      - name: Run PHPCS
        shell: bash
        run: |
          RULESET="$(pwd)/phpcs.xml.dist"
          CMD="~/.composer/vendor/bin/phpcs -s"
          if [ -f "$RULESET" ]; then
            echo "Using ruleset: $RULESET"
            $CMD --standard="$RULESET" ${{ steps.targets.outputs.targets }}
          else
            echo "No phpcs.xml.dist found; using PSR12"
            $CMD --standard=PSR12 ${{ steps.targets.outputs.targets }}
          fi
